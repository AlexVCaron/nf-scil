---
name: "bundle_stats"
description: write your description here
keywords:
  - Bundle
  - statistic
  - json
tools:
  - "scilpy":
      description: "The Sherbrooke Connectivity Imaging Lab (SCIL) Python dMRI processing toolbox."
      homepage: "https://github.com/scilus/scilpy.git"

input:
  - meta:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. `[ id:'sample1', single_end:false ]`

  - bundles:
      type: file
      description: Fiber bundle file to compute statistics on
      pattern: "*.trk"

  - voxel_labels_map:
      type: file
      description: label map of the corresponding fiber bundle.
      pattern: "*.nii.gz"

  - metrics:
      type: file
      description: Nifti file to compute statistics on. Probably some tractometry measure(s) such as FA, MD, RD, ...
      pattern: "*.nii.gz"

output:
  - meta:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. `[ id:'sample1', single_end:false ]`

  - length:
      type: file
      description: Information on a tractogram, number of streamlines, mean / min / max / std of length in number of points, length in mm and step size.
      pattern: "*__length_stats.json"

  - endpoints_raw:
      type: file
      description: Estimation of the cortical area affected by the bundle (assuming streamlines start/end in the cortex).
      pattern: "*__endpoints_map_raw.json"

  - endpoints_metric_stats:
      type: file
      description: Compute the statistics of metrics at the bundle endpoint map.
      pattern: "*__endpoints_metric_stats.json"

  - mean_std:
      type: file
      description: Average the metric values of all voxels occupied by the bundle.
      pattern: "*__mean_std.json"

  - volume:
      type: file
      description: Evaluate basic measurements of bundle(s).
      pattern: "*__volume.json"

  - streamline_count:
      type: file
      description: Return the number of streamlines in a tractogram.
      pattern: "*__streamline_count.json"

  - volume_per_labels:
      type: file
      description: Compute bundle volume per label in mm3. This script supports anisotropic voxels resolution. Volume is estimated by counting the number of voxel occupied by each label and multiplying it by the volume of a single voxel.
      pattern: "*__volume_per_label.json"

  - mean_std_per_point:
      type: file
      description: Average the metric values of all voxels occupied by the bundle per label.
      pattern: "*__mean_std_per_point.json"

  - endpoints_head:
      type: file
      description: Endpoint head map of bundle. The endpoint head map is simply a count of the number of streamlines that start in each voxel.
      pattern: "*.nii.gz"

  - endpoints_tail:
      type: file
      description: Endpoint tail map of bundle. The endpoint tail map is simply a count of the number of streamlines that end in each voxel.
      pattern: "*.nii.gz"

  - versions:
      type: file
      description: File containing software versions
      pattern: "versions.yml"

authors:
  - "@ThoumyreStanislas"
maintainers:
  - "@ThoumyreStanislas"
